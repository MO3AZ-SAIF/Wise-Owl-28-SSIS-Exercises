<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="8/15/2024 3:40:31 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="MOAAZ74"
  DTS:CreatorName="MOAAZ74\MO3AZ PC"
  DTS:DTSID="{6AF112CF-49CB-43FC-9E70-27DEE9CA4971}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5556.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package6"
  DTS:PackageType="5"
  DTS:VersionBuild="11"
  DTS:VersionGUID="{160C21CD-AD0C-4E24-A64B-5BD94FE2B470}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{827B14CF-140B-458D-8E36-AEBF78656994}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=D:\Courses\ETL ( SSIS )\WiseOwl Training\Ex_16\List of films.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[localhost.Wistful]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{B1889E89-7E61-4037-9CA3-CCE69999257F}"
      DTS:ObjectName="localhost.Wistful">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=localhost;Initial Catalog=Wistful;Provider=SQLNCLI11.1;Integrated Security=SSPI;Application Name=SSIS-Package6-{B1889E89-7E61-4037-9CA3-CCE69999257F}localhost.Wistful;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Adding any new genres found"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{70628A3A-AD5B-45E3-940D-24E9E686290A}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Adding any new genres found"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Adding any new genres found\Aggregate"
              componentClassID="Microsoft.Aggregate"
              contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
              description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
              name="Aggregate"
              version="3">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                  name="KeyScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                  name="Keys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                  name="CountDistinctScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence."
                  name="CountDistinctKeys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100."
                  name="AutoExtendFactor">25</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Adding any new genres found\Aggregate.Inputs[Aggregate Input 1]"
                  name="Aggregate Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Adding any new genres found\Aggregate.Inputs[Aggregate Input 1].Columns[Genre]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Genre"
                      lineageId="Package\Adding any new genres found\Excel Source.Outputs[Excel Source Output].Columns[Genre]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Adding any new genres found\Aggregate.Outputs[Aggregate Output 1]"
                  name="Aggregate Output 1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                      name="Keys" />
                  </properties>
                  <outputColumns>
                    <outputColumn
                      refId="Package\Adding any new genres found\Aggregate.Outputs[Aggregate Output 1].Columns[Genre]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Adding any new genres found\Aggregate.Outputs[Aggregate Output 1].Columns[Genre]"
                      name="Genre">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\Adding any new genres found\Excel Source.Outputs[Excel Source Output].Columns[Genre]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Adding any new genres found\Excel Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Films$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Adding any new genres found\Excel Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Adding any new genres found\Excel Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Adding any new genres found\Excel Source.Outputs[Excel Source Output].Columns[FilmID]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Adding any new genres found\Excel Source.Outputs[Excel Source Output].ExternalColumns[FilmID]"
                      lineageId="Package\Adding any new genres found\Excel Source.Outputs[Excel Source Output].Columns[FilmID]"
                      name="FilmID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Adding any new genres found\Excel Source.Outputs[Excel Source Output].Columns[Title]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Adding any new genres found\Excel Source.Outputs[Excel Source Output].ExternalColumns[Title]"
                      length="255"
                      lineageId="Package\Adding any new genres found\Excel Source.Outputs[Excel Source Output].Columns[Title]"
                      name="Title"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Adding any new genres found\Excel Source.Outputs[Excel Source Output].Columns[Director]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Adding any new genres found\Excel Source.Outputs[Excel Source Output].ExternalColumns[Director]"
                      length="255"
                      lineageId="Package\Adding any new genres found\Excel Source.Outputs[Excel Source Output].Columns[Director]"
                      name="Director"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Adding any new genres found\Excel Source.Outputs[Excel Source Output].Columns[Genre]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Adding any new genres found\Excel Source.Outputs[Excel Source Output].ExternalColumns[Genre]"
                      length="255"
                      lineageId="Package\Adding any new genres found\Excel Source.Outputs[Excel Source Output].Columns[Genre]"
                      name="Genre"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Adding any new genres found\Excel Source.Outputs[Excel Source Output].ExternalColumns[FilmID]"
                      dataType="r8"
                      name="FilmID" />
                    <externalMetadataColumn
                      refId="Package\Adding any new genres found\Excel Source.Outputs[Excel Source Output].ExternalColumns[Title]"
                      dataType="wstr"
                      length="255"
                      name="Title" />
                    <externalMetadataColumn
                      refId="Package\Adding any new genres found\Excel Source.Outputs[Excel Source Output].ExternalColumns[Director]"
                      dataType="wstr"
                      length="255"
                      name="Director" />
                    <externalMetadataColumn
                      refId="Package\Adding any new genres found\Excel Source.Outputs[Excel Source Output].ExternalColumns[Genre]"
                      dataType="wstr"
                      length="255"
                      name="Genre" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Adding any new genres found\Excel Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Adding any new genres found\Excel Source.Outputs[Excel Source Error Output].Columns[FilmID]"
                      dataType="r8"
                      lineageId="Package\Adding any new genres found\Excel Source.Outputs[Excel Source Error Output].Columns[FilmID]"
                      name="FilmID" />
                    <outputColumn
                      refId="Package\Adding any new genres found\Excel Source.Outputs[Excel Source Error Output].Columns[Title]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Adding any new genres found\Excel Source.Outputs[Excel Source Error Output].Columns[Title]"
                      name="Title" />
                    <outputColumn
                      refId="Package\Adding any new genres found\Excel Source.Outputs[Excel Source Error Output].Columns[Director]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Adding any new genres found\Excel Source.Outputs[Excel Source Error Output].Columns[Director]"
                      name="Director" />
                    <outputColumn
                      refId="Package\Adding any new genres found\Excel Source.Outputs[Excel Source Error Output].Columns[Genre]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Adding any new genres found\Excel Source.Outputs[Excel Source Error Output].Columns[Genre]"
                      name="Genre" />
                    <outputColumn
                      refId="Package\Adding any new genres found\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Adding any new genres found\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Adding any new genres found\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Adding any new genres found\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Adding any new genres found\Lookup"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Genre]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Genre]) [refTable]
where [refTable].[GenreName] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="GenreId" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GenreName" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Adding any new genres found\Excel Source.Outputs[Excel Source Output].Columns[Genre]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Adding any new genres found\Lookup.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[localhost.Wistful]"
                  connectionManagerRefId="Package.ConnectionManagers[localhost.Wistful]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Adding any new genres found\Lookup.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Adding any new genres found\Lookup.Inputs[Lookup Input].Columns[Genre]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Genre"
                      lineageId="Package\Adding any new genres found\Excel Source.Outputs[Excel Source Output].Columns[Genre]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">GenreName</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Adding any new genres found\Lookup.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Adding any new genres found\Lookup.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Adding any new genres found\Lookup.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Adding any new genres found\Lookup.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Adding any new genres found\Lookup.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Adding any new genres found\Lookup.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Adding any new genres found\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Adding any new genres found\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Adding any new genres found\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Adding any new genres found\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Adding any new genres found\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Genre]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Adding any new genres found\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[localhost.Wistful]"
                  connectionManagerRefId="Package.ConnectionManagers[localhost.Wistful]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Adding any new genres found\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Adding any new genres found\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Genre]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Genre"
                      externalMetadataColumnId="Package\Adding any new genres found\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GenreName]"
                      lineageId="Package\Adding any new genres found\Aggregate.Outputs[Aggregate Output 1].Columns[Genre]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Adding any new genres found\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GenreId]"
                      dataType="i4"
                      name="GenreId" />
                    <externalMetadataColumn
                      refId="Package\Adding any new genres found\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GenreName]"
                      dataType="wstr"
                      length="255"
                      name="GenreName" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Adding any new genres found\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Adding any new genres found\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Adding any new genres found\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Adding any new genres found\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Adding any new genres found\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Adding any new genres found\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Adding any new genres found.Paths[Aggregate Output 1]"
              endId="Package\Adding any new genres found\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Aggregate Output 1"
              startId="Package\Adding any new genres found\Aggregate.Outputs[Aggregate Output 1]" />
            <path
              refId="Package\Adding any new genres found.Paths[Excel Source Output]"
              endId="Package\Adding any new genres found\Lookup.Inputs[Lookup Input]"
              name="Excel Source Output"
              startId="Package\Adding any new genres found\Excel Source.Outputs[Excel Source Output]" />
            <path
              refId="Package\Adding any new genres found.Paths[Lookup No Match Output]"
              endId="Package\Adding any new genres found\Aggregate.Inputs[Aggregate Input 1]"
              name="Lookup No Match Output"
              startId="Package\Adding any new genres found\Lookup.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Data viewer to show new rows"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{29109601-23E0-4F70-A5B7-E7447468552A}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data viewer to show new rows"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Data viewer to show new rows\Conditional Split"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data viewer to show new rows\Conditional Split.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data viewer to show new rows\Conditional Split.Inputs[Conditional Split Input].Columns[GenreId]"
                      cachedDataType="i4"
                      cachedName="GenreId"
                      lineageId="Package\Data viewer to show new rows\OLE DB Source.Outputs[OLE DB Source Output].Columns[GenreId]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data viewer to show new rows\Conditional Split.Outputs[NewGenres]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="NewGenres"
                  synchronousInputId="Package\Data viewer to show new rows\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Data viewer to show new rows\OLE DB Source.Outputs[OLE DB Source Output].Columns[GenreId]} &gt; 22</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">GenreId &gt; 22</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data viewer to show new rows\Conditional Split.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Data viewer to show new rows\Conditional Split.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data viewer to show new rows\Conditional Split.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Data viewer to show new rows\Conditional Split.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data viewer to show new rows\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data viewer to show new rows\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data viewer to show new rows\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data viewer to show new rows\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data viewer to show new rows\OLE DB Source"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="OLE DB Source"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[FilmsForLookupExercise]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data viewer to show new rows\OLE DB Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[localhost.Wistful]"
                  connectionManagerRefId="Package.ConnectionManagers[localhost.Wistful]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Data viewer to show new rows\OLE DB Source.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data viewer to show new rows\OLE DB Source.Outputs[OLE DB Source Output].Columns[FilmName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data viewer to show new rows\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[FilmName]"
                      length="255"
                      lineageId="Package\Data viewer to show new rows\OLE DB Source.Outputs[OLE DB Source Output].Columns[FilmName]"
                      name="FilmName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data viewer to show new rows\OLE DB Source.Outputs[OLE DB Source Output].Columns[Director]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data viewer to show new rows\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Director]"
                      length="255"
                      lineageId="Package\Data viewer to show new rows\OLE DB Source.Outputs[OLE DB Source Output].Columns[Director]"
                      name="Director"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data viewer to show new rows\OLE DB Source.Outputs[OLE DB Source Output].Columns[GenreId]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data viewer to show new rows\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[GenreId]"
                      lineageId="Package\Data viewer to show new rows\OLE DB Source.Outputs[OLE DB Source Output].Columns[GenreId]"
                      name="GenreId"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data viewer to show new rows\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[FilmName]"
                      dataType="wstr"
                      length="255"
                      name="FilmName" />
                    <externalMetadataColumn
                      refId="Package\Data viewer to show new rows\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Director]"
                      dataType="wstr"
                      length="255"
                      name="Director" />
                    <externalMetadataColumn
                      refId="Package\Data viewer to show new rows\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[GenreId]"
                      dataType="i4"
                      name="GenreId" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Data viewer to show new rows\OLE DB Source.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data viewer to show new rows\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[FilmName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data viewer to show new rows\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[FilmName]"
                      name="FilmName" />
                    <outputColumn
                      refId="Package\Data viewer to show new rows\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Director]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data viewer to show new rows\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Director]"
                      name="Director" />
                    <outputColumn
                      refId="Package\Data viewer to show new rows\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[GenreId]"
                      dataType="i4"
                      lineageId="Package\Data viewer to show new rows\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[GenreId]"
                      name="GenreId" />
                    <outputColumn
                      refId="Package\Data viewer to show new rows\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data viewer to show new rows\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data viewer to show new rows\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data viewer to show new rows\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data viewer to show new rows\Union All"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Union All"
              version="1">
              <inputs>
                <input
                  refId="Package\Data viewer to show new rows\Union All.Inputs[Union All Input 1]"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data viewer to show new rows\Union All.Inputs[Union All Input 1].Columns[FilmName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="FilmName"
                      lineageId="Package\Data viewer to show new rows\OLE DB Source.Outputs[OLE DB Source Output].Columns[FilmName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data viewer to show new rows\Union All.Outputs[Union All Output 1].Columns[FilmName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data viewer to show new rows\Union All.Inputs[Union All Input 1].Columns[Director]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Director"
                      lineageId="Package\Data viewer to show new rows\OLE DB Source.Outputs[OLE DB Source Output].Columns[Director]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data viewer to show new rows\Union All.Outputs[Union All Output 1].Columns[Director]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data viewer to show new rows\Union All.Inputs[Union All Input 1].Columns[GenreId]"
                      cachedDataType="i4"
                      cachedName="GenreId"
                      lineageId="Package\Data viewer to show new rows\OLE DB Source.Outputs[OLE DB Source Output].Columns[GenreId]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data viewer to show new rows\Union All.Outputs[Union All Output 1].Columns[GenreId]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Data viewer to show new rows\Union All.Inputs[Union All Input 2]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data viewer to show new rows\Union All.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data viewer to show new rows\Union All.Outputs[Union All Output 1].Columns[FilmName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data viewer to show new rows\Union All.Outputs[Union All Output 1].Columns[FilmName]"
                      name="FilmName" />
                    <outputColumn
                      refId="Package\Data viewer to show new rows\Union All.Outputs[Union All Output 1].Columns[Director]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data viewer to show new rows\Union All.Outputs[Union All Output 1].Columns[Director]"
                      name="Director" />
                    <outputColumn
                      refId="Package\Data viewer to show new rows\Union All.Outputs[Union All Output 1].Columns[GenreId]"
                      dataType="i4"
                      lineageId="Package\Data viewer to show new rows\Union All.Outputs[Union All Output 1].Columns[GenreId]"
                      name="GenreId" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data viewer to show new rows.Paths[NewGenres]"
              endId="Package\Data viewer to show new rows\Union All.Inputs[Union All Input 1]"
              name="NewGenres"
              startId="Package\Data viewer to show new rows\Conditional Split.Outputs[NewGenres]" />
            <path
              refId="Package\Data viewer to show new rows.Paths[OLE DB Source Output]"
              endId="Package\Data viewer to show new rows\Conditional Split.Inputs[Conditional Split Input]"
              name="OLE DB Source Output"
              startId="Package\Data viewer to show new rows\OLE DB Source.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Delete Old Data"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{1293CD93-EDC3-497F-B0B5-51546BAA73CD}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Delete Old Data"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{B1889E89-7E61-4037-9CA3-CCE69999257F}"
          SQLTask:SqlStatementSource="truncate  table FilmsForLookupExercise " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Send the results of this to the FilmsForLookupExercise table"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{430FD7E1-BAEA-4B4C-A3D3-59BDB11FB576}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Send the results of this to the FilmsForLookupExercise table"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Films$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Outputs[Excel Source Output].Columns[FilmID]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Outputs[Excel Source Output].ExternalColumns[FilmID]"
                      lineageId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Outputs[Excel Source Output].Columns[FilmID]"
                      name="FilmID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Outputs[Excel Source Output].Columns[Title]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Title]"
                      length="255"
                      lineageId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Outputs[Excel Source Output].Columns[Title]"
                      name="Title"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Outputs[Excel Source Output].Columns[Director]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Director]"
                      length="255"
                      lineageId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Outputs[Excel Source Output].Columns[Director]"
                      name="Director"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Outputs[Excel Source Output].Columns[Genre]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Genre]"
                      length="255"
                      lineageId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Outputs[Excel Source Output].Columns[Genre]"
                      name="Genre"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Outputs[Excel Source Output].ExternalColumns[FilmID]"
                      dataType="r8"
                      name="FilmID" />
                    <externalMetadataColumn
                      refId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Title]"
                      dataType="wstr"
                      length="255"
                      name="Title" />
                    <externalMetadataColumn
                      refId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Director]"
                      dataType="wstr"
                      length="255"
                      name="Director" />
                    <externalMetadataColumn
                      refId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Genre]"
                      dataType="wstr"
                      length="255"
                      name="Genre" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Outputs[Excel Source Error Output].Columns[FilmID]"
                      dataType="r8"
                      lineageId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Outputs[Excel Source Error Output].Columns[FilmID]"
                      name="FilmID" />
                    <outputColumn
                      refId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Outputs[Excel Source Error Output].Columns[Title]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Outputs[Excel Source Error Output].Columns[Title]"
                      name="Title" />
                    <outputColumn
                      refId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Outputs[Excel Source Error Output].Columns[Director]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Outputs[Excel Source Error Output].Columns[Director]"
                      name="Director" />
                    <outputColumn
                      refId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Outputs[Excel Source Error Output].Columns[Genre]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Outputs[Excel Source Error Output].Columns[Genre]"
                      name="Genre" />
                    <outputColumn
                      refId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Send the results of this to the FilmsForLookupExercise table\Lookup"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Genre]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Genre]) [refTable]
where [refTable].[GenreName] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="GenreId" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GenreName" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Outputs[Excel Source Output].Columns[Genre]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Send the results of this to the FilmsForLookupExercise table\Lookup.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[localhost.Wistful]"
                  connectionManagerRefId="Package.ConnectionManagers[localhost.Wistful]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Send the results of this to the FilmsForLookupExercise table\Lookup.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Send the results of this to the FilmsForLookupExercise table\Lookup.Inputs[Lookup Input].Columns[Genre]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Genre"
                      lineageId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Outputs[Excel Source Output].Columns[Genre]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">GenreName</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Send the results of this to the FilmsForLookupExercise table\Lookup.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Send the results of this to the FilmsForLookupExercise table\Lookup.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Send the results of this to the FilmsForLookupExercise table\Lookup.Outputs[Lookup Match Output].Columns[GenreId]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Send the results of this to the FilmsForLookupExercise table\Lookup.Outputs[Lookup Match Output].Columns[GenreId]"
                      name="GenreId"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">GenreId</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Send the results of this to the FilmsForLookupExercise table\Lookup.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Send the results of this to the FilmsForLookupExercise table\Lookup.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Send the results of this to the FilmsForLookupExercise table\Lookup.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Send the results of this to the FilmsForLookupExercise table\Lookup.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Send the results of this to the FilmsForLookupExercise table\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Send the results of this to the FilmsForLookupExercise table\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Send the results of this to the FilmsForLookupExercise table\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Send the results of this to the FilmsForLookupExercise table\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Send the results of this to the FilmsForLookupExercise table\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[FilmsForLookupExercise]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Send the results of this to the FilmsForLookupExercise table\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[localhost.Wistful]"
                  connectionManagerRefId="Package.ConnectionManagers[localhost.Wistful]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Send the results of this to the FilmsForLookupExercise table\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Send the results of this to the FilmsForLookupExercise table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Director]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Director"
                      externalMetadataColumnId="Package\Send the results of this to the FilmsForLookupExercise table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Director]"
                      lineageId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Outputs[Excel Source Output].Columns[Director]" />
                    <inputColumn
                      refId="Package\Send the results of this to the FilmsForLookupExercise table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[GenreId]"
                      cachedDataType="i4"
                      cachedName="GenreId"
                      externalMetadataColumnId="Package\Send the results of this to the FilmsForLookupExercise table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GenreId]"
                      lineageId="Package\Send the results of this to the FilmsForLookupExercise table\Lookup.Outputs[Lookup Match Output].Columns[GenreId]" />
                    <inputColumn
                      refId="Package\Send the results of this to the FilmsForLookupExercise table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Title]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Title"
                      externalMetadataColumnId="Package\Send the results of this to the FilmsForLookupExercise table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FilmName]"
                      lineageId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Outputs[Excel Source Output].Columns[Title]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Send the results of this to the FilmsForLookupExercise table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FilmName]"
                      dataType="wstr"
                      length="255"
                      name="FilmName" />
                    <externalMetadataColumn
                      refId="Package\Send the results of this to the FilmsForLookupExercise table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Director]"
                      dataType="wstr"
                      length="255"
                      name="Director" />
                    <externalMetadataColumn
                      refId="Package\Send the results of this to the FilmsForLookupExercise table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GenreId]"
                      dataType="i4"
                      name="GenreId" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Send the results of this to the FilmsForLookupExercise table\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Send the results of this to the FilmsForLookupExercise table\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Send the results of this to the FilmsForLookupExercise table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Send the results of this to the FilmsForLookupExercise table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Send the results of this to the FilmsForLookupExercise table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Send the results of this to the FilmsForLookupExercise table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Send the results of this to the FilmsForLookupExercise table.Paths[Excel Source Output]"
              endId="Package\Send the results of this to the FilmsForLookupExercise table\Lookup.Inputs[Lookup Input]"
              name="Excel Source Output"
              startId="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source.Outputs[Excel Source Output]" />
            <path
              refId="Package\Send the results of this to the FilmsForLookupExercise table.Paths[Lookup Match Output]"
              endId="Package\Send the results of this to the FilmsForLookupExercise table\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Lookup Match Output"
              startId="Package\Send the results of this to the FilmsForLookupExercise table\Lookup.Outputs[Lookup Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{1C6CE9AE-0B61-495F-9399-B032996199F0}"
      DTS:From="Package\Delete Old Data"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Adding any new genres found" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{4F9C8466-2C06-47CB-80F5-1210803DB086}"
      DTS:From="Package\Adding any new genres found"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Send the results of this to the FilmsForLookupExercise table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{ED50A5B4-40EC-4C99-8698-FF2A5EAAECA1}"
      DTS:From="Package\Send the results of this to the FilmsForLookupExercise table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Data viewer to show new rows" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph">
        <AnnotationLayout
          Text="Use a lookup transform to add non-matching genres, then import a list of films using the genres table."
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="570,40"
          Id="f0dae7e1-9254-42d9-b27b-437a02a54486"
          TopLeft="303,96" />
        <NodeLayout
          Size="414,42"
          Id="Package\Adding any new genres found"
          TopLeft="365,265" />
        <NodeLayout
          Size="401,42"
          Id="Package\Delete Old Data"
          TopLeft="369,164" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="570.75,206">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59"
              Start="0,0"
              End="0,51.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="423,42"
          Id="Package\Send the results of this to the FilmsForLookupExercise table"
          TopLeft="363.5,354.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="573.5,307">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,47.5"
              Start="0,0"
              End="0,40">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="373,42"
          Id="Package\Data viewer to show new rows"
          TopLeft="386,443" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="573.75,396.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,46.5"
              Start="0,0"
              End="0,39">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Adding any new genres found">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="354,42"
          Id="Package\Adding any new genres found\Excel Source"
          TopLeft="367,125" />
        <NodeLayout
          Size="227,42"
          Id="Package\Adding any new genres found\Lookup"
          TopLeft="437,218" />
        <EdgeLayout
          Id="Package\Adding any new genres found.Paths[Excel Source Output]"
          TopLeft="547.25,167">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,51"
              Start="0,0"
              End="0,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="234,42"
          Id="Package\Adding any new genres found\OLE DB Destination"
          TopLeft="436,387" />
        <NodeLayout
          Size="127,42"
          Id="Package\Adding any new genres found\Aggregate"
          TopLeft="485,299" />
        <EdgeLayout
          Id="Package\Adding any new genres found.Paths[Lookup No Match Output]"
          TopLeft="549.5,260">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39"
              Start="0,0"
              End="0,31.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,9.9453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Adding any new genres found.Paths[Aggregate Output 1]"
          TopLeft="550.75,341">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,46"
              Start="0,0"
              End="0,38.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Adding any new genres found\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Adding any new genres found\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[Genre]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Adding any new genres found\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Send the results of this to the FilmsForLookupExercise table">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="299,42"
          Id="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source"
          TopLeft="398,120" />
        <NodeLayout
          Size="240,42"
          Id="Package\Send the results of this to the FilmsForLookupExercise table\Lookup"
          TopLeft="430,222" />
        <EdgeLayout
          Id="Package\Send the results of this to the FilmsForLookupExercise table.Paths[Excel Source Output]"
          TopLeft="548.75,162">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="286,42"
          Id="Package\Send the results of this to the FilmsForLookupExercise table\OLE DB Destination"
          TopLeft="401,331" />
        <EdgeLayout
          Id="Package\Send the results of this to the FilmsForLookupExercise table.Paths[Lookup Match Output]"
          TopLeft="547,264">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,67"
              Start="0,0"
              End="0,59.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,59.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,23.9453125,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Send the results of this to the FilmsForLookupExercise table\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Send the results of this to the FilmsForLookupExercise table\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[Genre]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Send the results of this to the FilmsForLookupExercise table\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Data viewer to show new rows">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="277,42"
          Id="Package\Data viewer to show new rows\OLE DB Source"
          TopLeft="399,137" />
        <NodeLayout
          Size="276,42"
          Id="Package\Data viewer to show new rows\Conditional Split"
          TopLeft="402,255" />
        <EdgeLayout
          Id="Package\Data viewer to show new rows.Paths[OLE DB Source Output]"
          TopLeft="538.75,179">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,76"
              Start="0,0"
              End="0,68.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,68.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="205,42"
          Id="Package\Data viewer to show new rows\Union All"
          TopLeft="433,369" />
        <EdgeLayout
          Id="Package\Data viewer to show new rows.Paths[NewGenres]"
          TopLeft="537.75,297">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,72"
              Start="0,0"
              End="0,64.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,64.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-34.49623046875,24.25,68.9924609375,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Data viewer to show new rows\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>